/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.eastsoft.router.ipc.proto;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MobileInfo extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MobileInfo\",\"namespace\":\"com.eastsoft.router.ipc.proto\",\"fields\":[{\"name\":\"gid\",\"type\":\"long\"},{\"name\":\"optionalMobileType\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.lang.String\"}]},{\"name\":\"optionalIMEI\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.lang.String\"}]},{\"name\":\"optionalTelNumber\",\"type\":[\"null\",{\"type\":\"string\",\"java-class\":\"java.lang.String\"}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public long gid;
  @Deprecated public java.lang.String optionalMobileType;
  @Deprecated public java.lang.String optionalIMEI;
  @Deprecated public java.lang.String optionalTelNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MobileInfo() {}

  /**
   * All-args constructor.
   */
  public MobileInfo(java.lang.Long gid, java.lang.String optionalMobileType, java.lang.String optionalIMEI, java.lang.String optionalTelNumber) {
    this.gid = gid;
    this.optionalMobileType = optionalMobileType;
    this.optionalIMEI = optionalIMEI;
    this.optionalTelNumber = optionalTelNumber;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return gid;
    case 1: return optionalMobileType;
    case 2: return optionalIMEI;
    case 3: return optionalTelNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: gid = (java.lang.Long)value$; break;
    case 1: optionalMobileType = (java.lang.String)value$; break;
    case 2: optionalIMEI = (java.lang.String)value$; break;
    case 3: optionalTelNumber = (java.lang.String)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'gid' field.
   */
  public java.lang.Long getGid() {
    return gid;
  }

  /**
   * Sets the value of the 'gid' field.
   * @param value the value to set.
   */
  public void setGid(java.lang.Long value) {
    this.gid = value;
  }

  /**
   * Gets the value of the 'optionalMobileType' field.
   */
  public java.lang.String getOptionalMobileType() {
    return optionalMobileType;
  }

  /**
   * Sets the value of the 'optionalMobileType' field.
   * @param value the value to set.
   */
  public void setOptionalMobileType(java.lang.String value) {
    this.optionalMobileType = value;
  }

  /**
   * Gets the value of the 'optionalIMEI' field.
   */
  public java.lang.String getOptionalIMEI() {
    return optionalIMEI;
  }

  /**
   * Sets the value of the 'optionalIMEI' field.
   * @param value the value to set.
   */
  public void setOptionalIMEI(java.lang.String value) {
    this.optionalIMEI = value;
  }

  /**
   * Gets the value of the 'optionalTelNumber' field.
   */
  public java.lang.String getOptionalTelNumber() {
    return optionalTelNumber;
  }

  /**
   * Sets the value of the 'optionalTelNumber' field.
   * @param value the value to set.
   */
  public void setOptionalTelNumber(java.lang.String value) {
    this.optionalTelNumber = value;
  }

  /** Creates a new MobileInfo RecordBuilder */
  public static com.eastsoft.router.ipc.proto.MobileInfo.Builder newBuilder() {
    return new com.eastsoft.router.ipc.proto.MobileInfo.Builder();
  }
  
  /** Creates a new MobileInfo RecordBuilder by copying an existing Builder */
  public static com.eastsoft.router.ipc.proto.MobileInfo.Builder newBuilder(com.eastsoft.router.ipc.proto.MobileInfo.Builder other) {
    return new com.eastsoft.router.ipc.proto.MobileInfo.Builder(other);
  }
  
  /** Creates a new MobileInfo RecordBuilder by copying an existing MobileInfo instance */
  public static com.eastsoft.router.ipc.proto.MobileInfo.Builder newBuilder(com.eastsoft.router.ipc.proto.MobileInfo other) {
    return new com.eastsoft.router.ipc.proto.MobileInfo.Builder(other);
  }
  
  /**
   * RecordBuilder for MobileInfo instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MobileInfo>
    implements org.apache.avro.data.RecordBuilder<MobileInfo> {

    private long gid;
    private java.lang.String optionalMobileType;
    private java.lang.String optionalIMEI;
    private java.lang.String optionalTelNumber;

    /** Creates a new Builder */
    private Builder() {
      super(com.eastsoft.router.ipc.proto.MobileInfo.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.eastsoft.router.ipc.proto.MobileInfo.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.gid)) {
        this.gid = data().deepCopy(fields()[0].schema(), other.gid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.optionalMobileType)) {
        this.optionalMobileType = data().deepCopy(fields()[1].schema(), other.optionalMobileType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.optionalIMEI)) {
        this.optionalIMEI = data().deepCopy(fields()[2].schema(), other.optionalIMEI);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.optionalTelNumber)) {
        this.optionalTelNumber = data().deepCopy(fields()[3].schema(), other.optionalTelNumber);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MobileInfo instance */
    private Builder(com.eastsoft.router.ipc.proto.MobileInfo other) {
            super(com.eastsoft.router.ipc.proto.MobileInfo.SCHEMA$);
      if (isValidValue(fields()[0], other.gid)) {
        this.gid = data().deepCopy(fields()[0].schema(), other.gid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.optionalMobileType)) {
        this.optionalMobileType = data().deepCopy(fields()[1].schema(), other.optionalMobileType);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.optionalIMEI)) {
        this.optionalIMEI = data().deepCopy(fields()[2].schema(), other.optionalIMEI);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.optionalTelNumber)) {
        this.optionalTelNumber = data().deepCopy(fields()[3].schema(), other.optionalTelNumber);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'gid' field */
    public java.lang.Long getGid() {
      return gid;
    }
    
    /** Sets the value of the 'gid' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder setGid(long value) {
      validate(fields()[0], value);
      this.gid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'gid' field has been set */
    public boolean hasGid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'gid' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder clearGid() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'optionalMobileType' field */
    public java.lang.String getOptionalMobileType() {
      return optionalMobileType;
    }
    
    /** Sets the value of the 'optionalMobileType' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder setOptionalMobileType(java.lang.String value) {
      validate(fields()[1], value);
      this.optionalMobileType = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'optionalMobileType' field has been set */
    public boolean hasOptionalMobileType() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'optionalMobileType' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder clearOptionalMobileType() {
      optionalMobileType = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'optionalIMEI' field */
    public java.lang.String getOptionalIMEI() {
      return optionalIMEI;
    }
    
    /** Sets the value of the 'optionalIMEI' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder setOptionalIMEI(java.lang.String value) {
      validate(fields()[2], value);
      this.optionalIMEI = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'optionalIMEI' field has been set */
    public boolean hasOptionalIMEI() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'optionalIMEI' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder clearOptionalIMEI() {
      optionalIMEI = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'optionalTelNumber' field */
    public java.lang.String getOptionalTelNumber() {
      return optionalTelNumber;
    }
    
    /** Sets the value of the 'optionalTelNumber' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder setOptionalTelNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.optionalTelNumber = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'optionalTelNumber' field has been set */
    public boolean hasOptionalTelNumber() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'optionalTelNumber' field */
    public com.eastsoft.router.ipc.proto.MobileInfo.Builder clearOptionalTelNumber() {
      optionalTelNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public MobileInfo build() {
      try {
        MobileInfo record = new MobileInfo();
        record.gid = fieldSetFlags()[0] ? this.gid : (java.lang.Long) defaultValue(fields()[0]);
        record.optionalMobileType = fieldSetFlags()[1] ? this.optionalMobileType : (java.lang.String) defaultValue(fields()[1]);
        record.optionalIMEI = fieldSetFlags()[2] ? this.optionalIMEI : (java.lang.String) defaultValue(fields()[2]);
        record.optionalTelNumber = fieldSetFlags()[3] ? this.optionalTelNumber : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
