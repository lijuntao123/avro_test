/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package org.apache.cassandra.db.migration.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class DropKeyspace extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"DropKeyspace\",\"namespace\":\"org.apache.cassandra.db.migration.avro\",\"fields\":[{\"name\":\"ksname\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence ksname;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public DropKeyspace() {}

  /**
   * All-args constructor.
   */
  public DropKeyspace(java.lang.CharSequence ksname) {
    this.ksname = ksname;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ksname;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ksname = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ksname' field.
   */
  public java.lang.CharSequence getKsname() {
    return ksname;
  }

  /**
   * Sets the value of the 'ksname' field.
   * @param value the value to set.
   */
  public void setKsname(java.lang.CharSequence value) {
    this.ksname = value;
  }

  /** Creates a new DropKeyspace RecordBuilder */
  public static org.apache.cassandra.db.migration.avro.DropKeyspace.Builder newBuilder() {
    return new org.apache.cassandra.db.migration.avro.DropKeyspace.Builder();
  }
  
  /** Creates a new DropKeyspace RecordBuilder by copying an existing Builder */
  public static org.apache.cassandra.db.migration.avro.DropKeyspace.Builder newBuilder(org.apache.cassandra.db.migration.avro.DropKeyspace.Builder other) {
    return new org.apache.cassandra.db.migration.avro.DropKeyspace.Builder(other);
  }
  
  /** Creates a new DropKeyspace RecordBuilder by copying an existing DropKeyspace instance */
  public static org.apache.cassandra.db.migration.avro.DropKeyspace.Builder newBuilder(org.apache.cassandra.db.migration.avro.DropKeyspace other) {
    return new org.apache.cassandra.db.migration.avro.DropKeyspace.Builder(other);
  }
  
  /**
   * RecordBuilder for DropKeyspace instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<DropKeyspace>
    implements org.apache.avro.data.RecordBuilder<DropKeyspace> {

    private java.lang.CharSequence ksname;

    /** Creates a new Builder */
    private Builder() {
      super(org.apache.cassandra.db.migration.avro.DropKeyspace.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(org.apache.cassandra.db.migration.avro.DropKeyspace.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ksname)) {
        this.ksname = data().deepCopy(fields()[0].schema(), other.ksname);
        fieldSetFlags()[0] = true;
      }
    }
    
    /** Creates a Builder by copying an existing DropKeyspace instance */
    private Builder(org.apache.cassandra.db.migration.avro.DropKeyspace other) {
            super(org.apache.cassandra.db.migration.avro.DropKeyspace.SCHEMA$);
      if (isValidValue(fields()[0], other.ksname)) {
        this.ksname = data().deepCopy(fields()[0].schema(), other.ksname);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'ksname' field */
    public java.lang.CharSequence getKsname() {
      return ksname;
    }
    
    /** Sets the value of the 'ksname' field */
    public org.apache.cassandra.db.migration.avro.DropKeyspace.Builder setKsname(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.ksname = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ksname' field has been set */
    public boolean hasKsname() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ksname' field */
    public org.apache.cassandra.db.migration.avro.DropKeyspace.Builder clearKsname() {
      ksname = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public DropKeyspace build() {
      try {
        DropKeyspace record = new DropKeyspace();
        record.ksname = fieldSetFlags()[0] ? this.ksname : (java.lang.CharSequence) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
